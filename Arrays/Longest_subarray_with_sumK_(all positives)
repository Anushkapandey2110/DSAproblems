description:
Problem statement
You are given an array 'a' of size 'n' and an integer 'k'.



Find the length of the longest subarray of 'a' whose sum is equal to 'k'.



Example :
Input: ‘n’ = 7 ‘k’ = 3
‘a’ = [1, 2, 3, 1, 1, 1, 1]

Output: 3

Explanation: Subarrays whose sum = ‘3’ are:

[1, 2], [3], [1, 1, 1] and [1, 1, 1]

Here, the length of the longest subarray is 3, which is our final answer.
solution:
int longestSubarrayWithSumK(vector<int> a, long long k) {
    int right=0;
    int left=0;
    long long sum=a[0];
    int maxlen=0;
    int n=a.size();
    while(right < n)
    {
      while (left <= right && sum > k) {
        sum -= a[left];
        left++;
      }
        right++;
      if (right < n)
      sum += a[right];
        if(sum == k)
        {
            maxlen=max(maxlen,right-left+1);
            }
        
       
    }
    return maxlen;
}
